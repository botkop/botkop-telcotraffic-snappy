
spark {
  checkpoint = "work/checkpoint"
  batch.size = 1000
  metrics {
    window.size = 30000
    slide.size = 2000
  }
}

kafka {
  consumer {
    properties {
      group.id = "traffic-consumer-group"
      quorum = "localhost:2181"
    }
    topics {
      attach = "attach-topic"
      celltower = "celltower-topic"
    }
  }

  producer {
    properties {
      bootstrap.servers = "localhost:9092"
      acks = "all"
      key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
      value.serializer = "org.apache.kafka.common.serialization.StringSerializer"
    }
    topics {
      celltower.stats = "celltower-stats-topic"
      subscriber.stats = "subscriber-stats-topic"
      kmeans.outlier = "kmeans-outlier-topic"
      geofence = "geofence-topic"
    }
  }
}

cassandra {
  connection.host = "127.0.0.1"
  keyspace = "traffic_keyspace"
  tables {
    attach = "attach_event"
  }
}

kmeans {
  dimensions = ["rtt", "byteLoss" ]
  k = 3
  decay.factor = 1.0
  window.size = 30000
  slide.size = 2000
}

geofence {
  file = "work/traffic-geofences.json"
}